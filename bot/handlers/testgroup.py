from telegram import Update
from telegram.ext import ContextTypes
import os
import logging

logger = logging.getLogger("bot.webhook")

async def test_group_notify(update: Update, context: ContextTypes.DEFAULT_TYPE):
    notify_chat_id = int(os.getenv("NOTIFY_CHAT_ID", "-1002602269591"))
    test_text = "üö® –¢–ï–°–¢ /testgroup ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É"

    logger.info("üß™ –ö–æ–º–∞–Ω–¥–∞ /testgroup –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: %s", update.effective_user.id)
    logger.info("üîî –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ chat_id = %s", notify_chat_id)

    try:
        response = await context.bot.send_message(
            chat_id=notify_chat_id,
            text=test_text
        )
        logger.info("üì§ –û—Ç–≤–µ—Ç –æ—Ç Telegram: %s", response)
        await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É (–ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥).")
    except Exception as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: %s", e)
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

