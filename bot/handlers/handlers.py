
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import (
    CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
)
from bot.db import SessionLocal
from bot.models import Complaint
from bot.pdf_generator import generate_pdf
from bot.handlers.admin_auth import auth_panel, chat_id
from bot.handlers.testgroup import test_group_notify
import os

FIO, TEL, COMMENT = range(3)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /report.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã:\n/report - –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É\n/FIO - –§–ò–û\n/tel - –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n/comment - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n/accept - –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
)

async def report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    return FIO

async def fio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["fio"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return TEL

async def tel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["tel"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã:")
    return COMMENT

async def comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["comment"] = update.message.text
    await update.message.reply_text("–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã –≤–≤–µ–¥–∏—Ç–µ /accept")
    return ConversationHandler.END

async def accept(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    fio = context.user_data.get("fio", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    tel = context.user_data.get("tel", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    comment = context.user_data.get("comment", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")

    session = SessionLocal()
    complaint = Complaint(
        user_id=user_id,
        full_name=fio,
        phone=tel,
        comment=comment
    )
    session.add(complaint)
    session.commit()
    session.refresh(complaint)
    session.close()

    pdf_file = generate_pdf(fio, tel, comment)
    await update.message.reply_text(f"PDF —Å –∂–∞–ª–æ–±–æ–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {pdf_file}")

    notify_chat_id = int(os.getenv("NOTIFY_CHAT_ID", "-1002602269591"))
    pdf_name = f"{fio.replace(' ', '_')}_{complaint.created_at.strftime('%Y%m%d%H%M')}.pdf"
    pdf_url = f"{os.getenv('WEBHOOK_HOST', 'https://mdmgasn.uz')}/pdfs/{pdf_name}"

    print("üßæ complaint ID:", complaint.id)
    print("üì¢ notify_chat_id:", notify_chat_id)
    print("üîó PDF link:", pdf_url)

    try:
        await context.bot.send_message(
            chat_id=notify_chat_id,
            text=f"üì¢ –ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞\n"
                 f"üë§ –§–ò–û: {fio}\n"
                 f"üìû –¢–µ–ª: {tel}\n"
                 f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n"
                 f"üìé PDF: {pdf_url}"
        )
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", e)

    await update.message.reply_text("–ñ–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ!")

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ñ–∞–ª–æ–±–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def setup_handlers(app):
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("report", report)],
        states={
            FIO: [MessageHandler(filters.TEXT & ~filters.COMMAND, fio)],
            TEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, tel)],
            COMMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, comment)],
        },
        fallbacks=[CommandHandler("cancel", cancel), CommandHandler("accept", accept)]
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("accept", accept))
    app.add_handler(CommandHandler("adminpanel", auth_panel))
    app.add_handler(CommandHandler("id", chat_id))
    app.add_handler(CommandHandler("testgroup", test_group_notify))
    app.add_handler(conv_handler)
